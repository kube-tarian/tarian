{{- $name := printf "%s-%s" .Release.Name "node-agent" -}}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ $name }}
  labels:
    app: {{ .Release.Name }}
spec:
  selector:
    matchLabels:
      app: {{ $name }}
  template:
    metadata:
      labels:
        app: {{ $name }}
    spec:
      containers:
      - name: tarian-node-agent
        image: "{{ .Values.nodeAgent.image.name }}:{{ .Values.nodeAgent.image.tag | default .Chart.AppVersion }}"
        args:
        - "--log-formatter={{ .Values.nodeAgent.log.encoding }}"
        - "--log-level={{ .Values.nodeAgent.log.level }}"
        - run
        - --cluster-agent-host={{ .Release.Name }}-cluster-agent.{{ .Release.Namespace }}.svc
        - --cluster-agent-port=80
        - --node-name=$(NODE_NAME)
{{- if .Values.clusterAgent.enableAddConstraint }}
        - --enable-add-constraint
{{- end }}
        securityContext:
          privileged: true
          runAsUser: 0
        volumeMounts:
        - name: host-proc
          mountPath: /host/proc
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINUX_VERSION_MAJOR
          valueFrom:
            configMapKeyRef:
              name: kernel-version-script
              key: get-kernel-version.sh
        - name: LINUX_VERSION_MINOR
          valueFrom:
            configMapKeyRef:
              name: kernel-version-script
              key: get-kernel-version.sh
        - name: LINUX_VERSION_PATCH
          valueFrom:
            configMapKeyRef:
              name: kernel-version-script
              key: get-kernel-version.sh
      serviceAccountName: {{ .Release.Name }}-node-sa
      volumes:
      - name: host-proc
        hostPath:
          path: {{ .Values.nodeAgent.hostProcDir }}
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps