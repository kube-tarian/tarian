name: build-test-publishcontainers

on:
  push:
    paths-ignore:
      - 'charts/**'
      - '**.md'
  pull_request:
    paths-ignore:
      - 'charts/**'
      - '**.md'

permissions: read-all

jobs:
  build:
    runs-on: self-hosted
    env:
      GOPATH: ${{ github.workspace }}/../go
      HOME: ${{ github.workspace }}/..
    services:
      postgres:
        image: postgres
        ports:
         - 5432:5432
        env:
          POSTGRES_PASSWORD: tarian
          POSTGRES_DB: tarian
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      # setup
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '1.17'

      # prepare
      - run: GO111MODULE=off go get -u github.com/mgechev/revive
      - run: go install honnef.co/go/tools/cmd/staticcheck@latest
      - run: go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.26
      - run: go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.1
      - run: make protoc

      - run: make build
      - run: make lint
      - run: make unit-test
      - run: make e2e-test

  k8s-test:
    runs-on: self-hosted
    env:
      GOPATH: ${{ github.workspace }}/../go
      HOME: ${{ github.workspace }}/..
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '1.17'
      - name: Set up Helm
        uses: azure/setup-helm@v1
      - uses: helm/kind-action@v1.2.0
        name: Create k8s cluster
        with:
          config: 'dev/cluster-config.yaml'

      # prepare for build
      - run: sudo apt update && sudo apt install -y jq
      - run: go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.26
      - run: go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.1
      - run: make protoc bin/goreleaser

      # build images
      - run: bash ./dev/run-kind-registry.sh
      - run: ./bin/goreleaser release --snapshot --rm-dist
      - run: make push-local-images
      - run: cp dist/tarianctl_linux_amd64/tarianctl ./bin/

      # deploy to k8s
      - run: make deploy

      # wait for deployment rollout
      - name: Wait for pods ready
        run: |
          kubectl wait --for=condition=ready pod --all --all-namespaces --timeout=5m || true
          kubectl get pods --all-namespaces
          kubectl get deployment --all-namespaces
          kubectl get svc --all-namespaces
          sleep 5s

      - run: make k8s-test

  publish-containers:
    needs: k8s-test
    if: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v') }}
    runs-on: self-hosted
    permissions:
      packages: write
    env:
      GOPATH: ${{ github.workspace }}/../go
      HOME: ${{ github.workspace }}/..
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '1.17'
      - run: sudo apt update && sudo apt install -y jq
      - run: go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.26
      - run: go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.1
      - run: make protoc bin/goreleaser
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: devopstoday11
          password: ${{ secrets.GITHUB_TOKEN }}
      - run: |
          if [[ $GITHUB_REF == refs/tags/v* ]]; then
            ./bin/goreleaser
          elif [[ $GITHUB_REF == refs/heads/main ]]; then
            ./bin/goreleaser --snapshot
          fi
        env:
          CONTAINER_REGISTRY: ghcr.io/${{ github.repository_owner }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: docker images
      - run: |
          if [[ $GITHUB_REF == refs/heads/main ]]; then
            docker push ghcr.io/${{ github.repository_owner}}/tarian-server
            docker push ghcr.io/${{ github.repository_owner}}/tarian-cluster-agent
            docker push ghcr.io/${{ github.repository_owner}}/tarian-pod-agent
          fi

